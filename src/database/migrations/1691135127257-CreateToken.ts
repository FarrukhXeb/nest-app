import { MigrationInterface, QueryRunner } from 'typeorm';

export class CreateToken1691135127257 implements MigrationInterface {
  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
        CREATE type token_type AS ENUM('access', 'refresh', 'resetPassword', 'verifyEmail');
        CREATE TABLE token (
            "id" int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
            "token" VARCHAR(255) NOT NULL,
            "userId" INT NOT NULL,
            "type" token_type NOT NULL,
            CONSTRAINT "fk_user_id" FOREIGN KEY ("userId") REFERENCES "user" (id)
        );
    `);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    const table = await queryRunner.getTable('token');
    const foreignKey = table.foreignKeys.find(
      (fk) => fk.columnNames.indexOf('userId') !== -1,
    );
    if (foreignKey) {
      await queryRunner.dropForeignKey('token', foreignKey);
    }
    await queryRunner.query(`DROP TABLE token`);
  }
}
